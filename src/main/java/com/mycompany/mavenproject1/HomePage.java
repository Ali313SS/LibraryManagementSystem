/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject1;

import java.awt.FlowLayout;
import java.util.*;
import javax.swing.*;


/**
 *
 * @author AliRagab313
 */
public class HomePage extends javax.swing.JFrame {

    String CurUserName;
    /**
     * Creates new form HomePage
     */
    public HomePage(String CurUserName) {
        
        initComponents();
        this.CurUserName=CurUserName;
        UserNameLable.setText(CurUserName);
        BalanceLable.setText("Balance = "+Double.toString(Profile.GetProfile(CurUserName).getBalance()));
        Profile.GetProfile(CurUserName).setHomeP(this);
        this.setResizable(false);
        
        
    }
    public void updateUserBalnce()
    {
         BalanceLable.setText("Balance = "+Double.toString(Profile.GetProfile(CurUserName).getBalance()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        BalanceLable = new javax.swing.JLabel();
        UserNameLable = new javax.swing.JLabel();
        Messagesbtn = new javax.swing.JButton();
        MyBookbtn = new javax.swing.JButton();
        allBookbtn = new javax.swing.JButton();
        BooksIwaitforit = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        Searchbtn = new javax.swing.JButton();
        LogOutbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        BalanceLable.setBackground(new java.awt.Color(153, 255, 153));
        BalanceLable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        BalanceLable.setText("Balance");
        BalanceLable.setToolTipText("");

        UserNameLable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        UserNameLable.setText("UserName");

        Messagesbtn.setBackground(new java.awt.Color(102, 102, 0));
        Messagesbtn.setText("MY_Messages");
        Messagesbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MessagesbtnActionPerformed(evt);
            }
        });

        MyBookbtn.setBackground(new java.awt.Color(204, 204, 255));
        MyBookbtn.setText("My_Book");
        MyBookbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MyBookbtnActionPerformed(evt);
            }
        });

        allBookbtn.setBackground(new java.awt.Color(204, 204, 255));
        allBookbtn.setText("allBook");
        allBookbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allBookbtnActionPerformed(evt);
            }
        });

        BooksIwaitforit.setBackground(new java.awt.Color(204, 204, 255));
        BooksIwaitforit.setText("BooksIwaitForit");
        BooksIwaitforit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BooksIwaitforitActionPerformed(evt);
            }
        });

        jTextField1.setText("Search");
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        Searchbtn.setText("Search");
        Searchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchbtnActionPerformed(evt);
            }
        });

        LogOutbtn.setText("LogOut");
        LogOutbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(LogOutbtn)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(UserNameLable, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(BalanceLable, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(138, 138, 138)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(BooksIwaitforit, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(MyBookbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(allBookbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(209, 209, 209)
                        .addComponent(Searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(658, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Messagesbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(BalanceLable, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(BooksIwaitforit, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(allBookbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MyBookbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Searchbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 328, Short.MAX_VALUE)
                        .addComponent(Messagesbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(LogOutbtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(UserNameLable, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        UserNameLable.getAccessibleContext().setAccessibleDescription("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public class BookInfoPage extends JFrame {
      public BookInfoPage(Book book) {
        setTitle("Book Information");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        JTextArea bookInfo = new JTextArea();
        bookInfo.setText("Title: " + book.getTitle() + "\n"
                + "Author: " + book.getAuthor() + "\n"
                + "Description: " + book.getDescription() + "\n"
                + "Status: " + (book.isAvailable() ? "free" : "taken") + "\n"
                + "Cost Per Day: " + book.getCostForDay() + "\n"
                + "Category: " + book.getCategory() + "\n"
        );
        bookInfo.setEditable(false);

        add(new JScrollPane(bookInfo));
    }
}

    private void MyBookbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MyBookbtnActionPerformed
 LSystem Sys = LSystem.getInstance();
    List<Integer> BookIDs = LSystem.MYBook(CurUserName);
    List<Book> myBooks = new ArrayList<>();
    for (Integer ID : BookIDs) {
        myBooks.add(BookProfile.GetProfile(ID));
    }

    JFrame myBooksFrame = new JFrame("My Books");
    myBooksFrame.setSize(600, 400);
    myBooksFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    JPanel panel = new JPanel();
    panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

    for (Book book : myBooks) {
        JPanel bookPanel = new JPanel();
        bookPanel.setLayout(new FlowLayout());

        JButton bookNameBtn = new JButton(book.getTitle());
        bookNameBtn.addActionListener(e -> {
            new BookInfoPage(book).setVisible(true);
        });

        JButton returnBtn = new JButton();
        if (book.isWithUser(CurUserName)) {
            returnBtn.setText("Return");
            returnBtn.addActionListener(e -> {
                boolean status = Sys.returnBook(CurUserName, book.getId());
                if (status) {
                    
                    JOptionPane.showMessageDialog(null, "Book returned successfully!");
                    returnBtn.setEnabled(false); // Disable the return button after successful return.
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to return the book. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            });
        } else {
            returnBtn.setEnabled(false);
        }

        bookPanel.add(bookNameBtn);
        bookPanel.add(returnBtn);
        panel.add(bookPanel);
    }

    JScrollPane scrollPane = new JScrollPane(panel);
    myBooksFrame.add(scrollPane);
    myBooksFrame.setVisible(true);
    
    }//GEN-LAST:event_MyBookbtnActionPerformed

    private void allBookbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allBookbtnActionPerformed
                                         
        LSystem Sys = LSystem.getInstance();
        List<Integer> BookIDs = Sys.getAllBook();
        List<Book> allBooks = new ArrayList<>();
        for (Integer ID : BookIDs) {
        allBooks.add(BookProfile.GetProfile(ID));
        }

        JFrame booksFrame = new JFrame("All Books");
        booksFrame.setSize(600, 400);
        booksFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

        JPanel panel = new JPanel();
        panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

        for (Book book : allBooks) {
        System.out.println(book.toString());
        JPanel bookPanel = new JPanel();
        bookPanel.setLayout(new FlowLayout());

        JButton bookNameBtn = new JButton(book.getTitle());
        bookNameBtn.addActionListener(e -> {
        new BookInfoPage(book).setVisible(true);
        });

        JButton actionBtn = new JButton();
        if (book.isAvailable()) {
        actionBtn.setText("Borrow");
        actionBtn.addActionListener(e -> {
        JFrame borrowFrame = new JFrame("Borrow Book");
        borrowFrame.setSize(300, 200);
        borrowFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        borrowFrame.setLayout(new FlowLayout());

        JLabel daysLabel = new JLabel("Number of days:");
        JTextField daysField = new JTextField(10);

        JLabel amountLabel = new JLabel("Amount paid:");
        JTextField amountField = new JTextField(10);

        JButton confirmButton = new JButton("Confirm");

        confirmButton.addActionListener(event -> {
        try {
        int numberOfDays = Integer.parseInt(daysField.getText());
        double costPerDay = book.getCostForDay();
        double totalAmount = numberOfDays * costPerDay;
        double amountPaid = Double.parseDouble(amountField.getText());

        if (numberOfDays <= 0) {
        JOptionPane.showMessageDialog(borrowFrame, "Number of days must be positive.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (numberOfDays > 1000) {
        JOptionPane.showMessageDialog(borrowFrame, "Number of days must be less than or equal 1000.", "Error", JOptionPane.ERROR_MESSAGE);
        } else if (amountPaid < Math.floor(totalAmount / 2)) {
        JOptionPane.showMessageDialog(borrowFrame, "Amount paid must be at least half of the total amount.", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
        boolean status = Sys.borrowBook(CurUserName, book.getId(), numberOfDays, amountPaid);
        if (status) {        
        JOptionPane.showMessageDialog(borrowFrame, "Book borrowed successfully!");
        actionBtn.setText("Return");
        borrowFrame.dispose();
        } else {
        JOptionPane.showMessageDialog(borrowFrame, "Failed to borrow the book. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        }
        } catch (NumberFormatException ex) {
        JOptionPane.showMessageDialog(borrowFrame, "Please enter valid numbers.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        });

        borrowFrame.add(daysLabel);
        borrowFrame.add(daysField);
        borrowFrame.add(amountLabel);
        borrowFrame.add(amountField);
        borrowFrame.add(confirmButton);
        borrowFrame.setVisible(true);
        });
        } else if (book.isWithUser(CurUserName)) {
        actionBtn.setText("Return");
        actionBtn.addActionListener(e -> {
        boolean status = Sys.returnBook(CurUserName, book.getId());
        if (status) {        
        JOptionPane.showMessageDialog(null, "Book returned successfully!");
        actionBtn.setEnabled(false); // Disable the button to prevent duplicate actions.
        } else {
        JOptionPane.showMessageDialog(null, "Failed to return the book. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        });
        } else if (!BookProfile.GetProfile(book.getId()).IsWait(CurUserName)) {
        actionBtn.setText("Reserve");
        actionBtn.addActionListener(e -> {
        boolean status = Sys.reserveBook(CurUserName, book.getId());
        if (status) {        
        JOptionPane.showMessageDialog(null, "Book reserved successfully!");
        actionBtn.setText("Unreserve");
        } else {
        JOptionPane.showMessageDialog(null, "Failed to reserve the book. Try again later.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        });
        } else {
        actionBtn.setText("Unreserve");
        actionBtn.addActionListener(e -> {
        boolean status = Sys.unreserveBook(CurUserName, book.getId());
        if (status) {        
        JOptionPane.showMessageDialog(null, "Reservation cancelled successfully!");
        actionBtn.setText("Reserve");
        } else {
        JOptionPane.showMessageDialog(null, "Failed to cancel the reservation. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
        }
        });
        }

        bookPanel.add(bookNameBtn);
        bookPanel.add(actionBtn);
        panel.add(bookPanel);
        }

        JScrollPane scrollPane = new JScrollPane(panel);
        booksFrame.add(scrollPane);
        booksFrame.setVisible(true);  
    }//GEN-LAST:event_allBookbtnActionPerformed

    private void BooksIwaitforitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BooksIwaitforitActionPerformed
    LSystem Sys = LSystem.getInstance();
    List<Integer> BookIDs = LSystem.MYReseveBook(CurUserName);
    List<Book> booksIWaitFor = new ArrayList<>();
    for (Integer ID : BookIDs) {
        booksIWaitFor.add(BookProfile.GetProfile(ID));
    }

    JFrame booksFrame = new JFrame("Books I Wait For It");
    booksFrame.setSize(600, 400);
    booksFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    JPanel panel = new JPanel();
    panel.setLayout(new BoxLayout(panel, BoxLayout.Y_AXIS));

    for (Book book : booksIWaitFor) {
        JPanel bookPanel = new JPanel();
        bookPanel.setLayout(new FlowLayout());

        JButton bookNameBtn = new JButton(book.getTitle());
        bookNameBtn.addActionListener(e -> {
            new BookInfoPage(book).setVisible(true);
        });

        JButton actionBtn = new JButton();

        if (book.isAvailable() && !book.isWithUser(CurUserName)) {
            actionBtn.setText("Reserve");
            actionBtn.addActionListener(e -> {
                boolean status = Sys.reserveBook(CurUserName, book.getId());
                if (status) {
                    
                    JOptionPane.showMessageDialog(null, "Book reserved successfully!");
                    actionBtn.setText("Unreserve");
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to reserve the book. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            });
        } else if (book.isWithUser(CurUserName)) {
            actionBtn.setText("Return");
            actionBtn.addActionListener(e -> {
                boolean status = Sys.returnBook(CurUserName, book.getId());
                if (status) {
                    
                    JOptionPane.showMessageDialog(null, "Book returned successfully!");
                    actionBtn.setText("Reserve"); // Reset back to "Reserve" after returning.
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to return the book. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            });
        } else {
            actionBtn.setText("Unreserve");
            actionBtn.addActionListener(e -> {
                boolean status = Sys.unreserveBook(CurUserName, book.getId());
                if (status) {
                    
                    JOptionPane.showMessageDialog(null, "Reservation cancelled successfully.");
                    actionBtn.setText("Reserve");
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to cancel the reservation. Please try again.", "Error", JOptionPane.ERROR_MESSAGE);
                }
            });
        }

        bookPanel.add(bookNameBtn);
        bookPanel.add(actionBtn);
        panel.add(bookPanel);
    }

    JScrollPane scrollPane = new JScrollPane(panel);
    booksFrame.add(scrollPane);
    booksFrame.setVisible(true);
    }//GEN-LAST:event_BooksIwaitforitActionPerformed

    private void SearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchbtnActionPerformed
        // TODO add your handling code here:
          JOptionPane.showMessageDialog(null, "Searching");        
    }//GEN-LAST:event_SearchbtnActionPerformed

    private void MessagesbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MessagesbtnActionPerformed
     
    LSystem Sys = LSystem.getInstance();
    List<Message> MU = Sys.GetAllMessageForUSer(CurUserName);
    JFrame messageFrame = new JFrame("User Messages");
    messageFrame.setSize(400, 300);
    messageFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);

    DefaultListModel<String> messageListModel = new DefaultListModel<>();
    for (Message msg : MU) {
        messageListModel.addElement("From: " + msg.getSender() + " | " + msg.getContent() + " | Date: " + msg.getDate());
    }
    JList<String> messageList = new JList<>(messageListModel);
    messageList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    messageList.setVisibleRowCount(10);

    JScrollPane scrollPane = new JScrollPane(messageList);
    messageFrame.add(scrollPane);
    messageFrame.setVisible(true);


    }//GEN-LAST:event_MessagesbtnActionPerformed

    private void LogOutbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutbtnActionPerformed
        new Login().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_LogOutbtnActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage("Ali").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BalanceLable;
    private javax.swing.JButton BooksIwaitforit;
    private javax.swing.JButton LogOutbtn;
    private javax.swing.JButton Messagesbtn;
    private javax.swing.JButton MyBookbtn;
    private javax.swing.JButton Searchbtn;
    private javax.swing.JLabel UserNameLable;
    private javax.swing.JButton allBookbtn;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
